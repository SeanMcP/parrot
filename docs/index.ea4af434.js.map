{"mappings":"kBACE,IAEEA,EADAC,EAAS,GAETC,EAAQ,UACV,MAAMC,EAAeC,SAASC,eAAe,QACvCC,EAAcF,SAASC,eAAe,UACtCE,EAAgBH,SAASC,eAAe,SACxCG,EAAcJ,SAASK,iBAAiB,iBACxCC,EAAeN,SAASC,eAAe,UAQ7C,GAAIM,UAAUC,cAAgBD,UAAUC,aAAaC,aAAc,CACjEC,QAAQC,IAAI,2BACZ,IACE,MAAMC,QAAeL,UAAUC,aAAaC,aAAa,CAAEI,OAAO,IAClEjB,EAAgB,IAAIkB,cAAcF,GAClC,MAAOG,GACPL,QAAQC,IAAI,8CAAgDI,SAG9DL,QAAQC,IAAI,+CAGdf,EAAcoB,gBAAmBC,GAAMpB,EAAOqB,KAAKD,EAAEE,MACrDvB,EAAcwB,OAAUC,IACtBnB,EAAYoB,aApBiBzB,GAC7B,OAAO0B,OAAOC,IAAIC,gBAChB,IAAIC,KAAK7B,EAAQ,CAAE8B,KAAM,4BAkBTC,CAAsB/B,GACxCK,EAAY2B,OACZhC,EAAS,IAGXE,EAAa+B,iBAAiB,UAAWb,IACvCf,EAAY6B,KAAOd,EAAEe,OAAOC,WAG9B9B,EAAc2B,iBAAiB,SAAUb,IACjB,SAAlBA,EAAEe,OAAOE,OACXhC,EAAYiC,aAAelB,EAAEe,OAAOI,MACpChC,EAAYiC,SAASC,IACnBA,EAAMC,aAAa,UAAWtB,EAAEe,OAAOI,QAAUE,EAAMF,UAEzDnB,EAAEuB,sBAINlC,EAAawB,iBAAiB,SAAUW,IACxB,YAAV3C,GACFF,EAAc8C,QACd5C,EAAQ,aACW,cAAVA,IACTF,EAAc+C,OACd7C,EAAQ,WAEVE,SAAS4C,KAAKC,QAAQ/C,MAAQA","sources":["src/main.ts"],"sourcesContent":["(async function () {\n  let alternateAudioURL,\n    chunks = [],\n    mediaRecorder,\n    state = \"initial\";\n  const loopCheckbox = document.getElementById(\"loop\");\n  const outputAudio = document.getElementById(\"output\") as HTMLAudioElement;\n  const ratesFieldset = document.getElementById(\"rates\");\n  const ratesRadios = document.querySelectorAll(\"[name='rate']\");\n  const recordButton = document.getElementById(\"record\");\n\n  function getAudioURLFromChunks(chunks) {\n    return window.URL.createObjectURL(\n      new Blob(chunks, { type: \"audio/ogg; codecs=opus\" })\n    );\n  }\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    console.log(\"getUserMedia supported.\");\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorder = new MediaRecorder(stream);\n    } catch (err) {\n      console.log(\"The following getUserMedia error occurred: \" + err);\n    }\n  } else {\n    console.log(\"getUserMedia not supported on your browser!\");\n  }\n\n  mediaRecorder.ondataavailable = (e) => chunks.push(e.data);\n  mediaRecorder.onstop = (_) => {\n    outputAudio.src = getAudioURLFromChunks(chunks);\n    outputAudio.play();\n    chunks = [];\n  };\n\n  loopCheckbox.addEventListener(\"change\", (e) => {\n    outputAudio.loop = e.target.checked;\n  });\n\n  ratesFieldset.addEventListener(\"click\", (e) => {\n    if (e.target.name === \"rate\") {\n      outputAudio.playbackRate = e.target.value;\n      ratesRadios.forEach((radio) => {\n        radio.setAttribute(\"checked\", e.target.value === radio.value);\n      });\n      e.stopPropagation();\n    }\n  });\n\n  recordButton.addEventListener(\"click\", (event) => {\n    if (state === \"initial\") {\n      mediaRecorder.start();\n      state = \"recording\";\n    } else if (state === \"recording\") {\n      mediaRecorder.stop();\n      state = \"initial\";\n    }\n    document.body.dataset.state = state;\n  });\n})();\n"],"names":["mediaRecorder","chunks","state","loopCheckbox","document","getElementById","outputAudio","ratesFieldset","ratesRadios","querySelectorAll","recordButton","navigator","mediaDevices","getUserMedia","console","log","stream","audio","MediaRecorder","err","ondataavailable","e","push","data","onstop","_","src","window","URL","createObjectURL","Blob","type","getAudioURLFromChunks","play","addEventListener","loop","target","checked","name","playbackRate","value","forEach","radio","setAttribute","stopPropagation","event","start","stop","body","dataset"],"version":3,"file":"index.ea4af434.js.map"}